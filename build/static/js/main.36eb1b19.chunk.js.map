{"version":3,"sources":["components/LoginForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","event","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","e","target","placeholder","required","align","MyMessage","message","attachments","length","src","file","alt","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","MessageForm","props","setValue","chatId","creds","trim","sendMessage","htmlFor","PictureOutlined","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36eb1b19.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        const authObject = {'Project-ID':\"4007ac41-d687-4539-978f-a572c331493e\" , 'User-Name':  username, 'User-Secret': password };\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', {headers: authObject});\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n        } catch (error){\r\n          setError('Oops, contact admin for further details.')\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n          <div className=\"form\">\r\n            <h1 className=\"title\">Chatlify App</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n              <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n              <div align=\"center\">\r\n                <button type=\"submit\" className=\"button\">\r\n                  <span>Start chatting</span>\r\n                </button>\r\n              </div>\r\n              <h2 className='error'>{error}</h2>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    \r\n    );\r\n};\r\n\r\nexport default LoginForm;","const MyMessage = ({ message }) => {\r\n  if (message.attachments && message.attachments.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: 'right' }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\r\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username;\r\n  return (\r\n\r\n    <div className=\"message-row\">\r\n        {isFirstMessageByUser && (\r\n          <div\r\n              className= \"message-avatar\"\r\n              style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n          \r\n          />\r\n    )}\r\n    {message?.attachments?.length > 0\r\n      ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n        />\r\n      ) : (\r\n        <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n          {message.text}\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n);\r\n};\r\n\r\nexport default TheirMessage;","import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;","import { ChatEngine } from 'react-chat-engine';\r\nimport './App.css';\r\nimport LoginForm from './components/LoginForm';\r\nimport ChatFeed from './components/ChatFeed';\r\nconst App = () => {\r\n    if(!localStorage.getItem('username'))  return  <LoginForm />\r\n    return (\r\n        <ChatEngine\r\n            height=\"100vh\"\r\n            projectID=\"4007ac41-d687-4539-978f-a572c331493e\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed{...chatAppProps} />}\r\n            onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n    />\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}